/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.boxcf.ui;

import com.box.utils.MsgBox;
import com.box.utils.UI;
import com.box.utils.Validator;
import com.box.utils.XDate;
import com.boxcf.dao.KhuyenMaiDao;
import com.boxcf.models.KhuyenMai;
import com.boxcf.models.ModelCbo;
import com.boxcf.store.Store;
import java.awt.Color;
import java.awt.Shape;
import java.awt.geom.RoundRectangle2D;
import java.util.Date;
import java.util.List;
import java.util.Random;
import javax.swing.JFrame;

/**
 *
 * @author HP
 */
public class ThongTinKM extends javax.swing.JFrame {

    private String idKm;
    private KhuyenMaiDao dKm = KhuyenMaiDao.getInstant();
    private KhuyenMai km;
    private int index = -1;
    List<KhuyenMai> list = dKm.selectAll();

    public ThongTinKM() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        gradientPanel1 = new com.boxcf.components.GradientPanel();
        pnlNhanVien = new com.boxcf.components.GradientPanel();
        lblMaNV = new javax.swing.JLabel();
        lblMaNV1 = new javax.swing.JLabel();
        lblMaNV2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnThemSP = new com.boxcf.components.ButtonRound();
        btnCapNhatSP = new com.boxcf.components.ButtonRound();
        btnFirst = new com.boxcf.components.ButtonRound();
        btnPre = new com.boxcf.components.ButtonRound();
        btnLast = new com.boxcf.components.ButtonRound();
        btnNext = new com.boxcf.components.ButtonRound();
        btnClean = new com.boxcf.components.ButtonRound();
        txtId = new com.boxcf.components.TextField();
        txtName = new com.boxcf.components.TextField();
        btnClose = new com.boxcf.components.ButtonRound();
        dcTimeStart = new com.toedter.calendar.JDateChooser();
        dcTimeEnd = new com.toedter.calendar.JDateChooser();
        lblMaNV4 = new javax.swing.JLabel();
        lblMaNV5 = new javax.swing.JLabel();
        txtQuantity = new com.boxcf.components.TextField();
        lblMaNV6 = new javax.swing.JLabel();
        cboPersent = new com.boxcf.components.ComboBoxSuggestion();
        lblMaNV7 = new javax.swing.JLabel();
        cboLevel = new com.boxcf.components.ComboBoxSuggestion();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        gradientPanel1.setColor1(new java.awt.Color(102, 102, 102));
        gradientPanel1.setColor2(new java.awt.Color(102, 102, 102));

        pnlNhanVien.setBackground(new java.awt.Color(102, 102, 102));
        pnlNhanVien.setColor1(new java.awt.Color(245, 250, 255));
        pnlNhanVien.setColor2(new java.awt.Color(245, 250, 255));
        pnlNhanVien.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMaNV.setBackground(new java.awt.Color(102, 0, 204));
        lblMaNV.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        lblMaNV.setForeground(new java.awt.Color(27, 51, 61));
        lblMaNV.setText(" Mã KM");
        pnlNhanVien.add(lblMaNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 80, -1));

        lblMaNV1.setBackground(new java.awt.Color(102, 0, 204));
        lblMaNV1.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        lblMaNV1.setForeground(new java.awt.Color(27, 51, 61));
        lblMaNV1.setText("Tên KM");
        pnlNhanVien.add(lblMaNV1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 80, -1));

        lblMaNV2.setBackground(new java.awt.Color(102, 0, 204));
        lblMaNV2.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        lblMaNV2.setForeground(new java.awt.Color(27, 51, 61));
        lblMaNV2.setText("Ngày BD");
        pnlNhanVien.add(lblMaNV2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 280, 100, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(40, 48, 84));
        jLabel1.setText("THÔNG TIN KHUYẾN MÃI");
        pnlNhanVien.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, -1, -1));

        btnThemSP.setBackground(new java.awt.Color(2, 172, 171));
        btnThemSP.setForeground(new java.awt.Color(255, 255, 255));
        btnThemSP.setText("LƯU");
        btnThemSP.setFocusable(false);
        btnThemSP.setFont(new java.awt.Font("UTM BryantLG", 1, 14)); // NOI18N
        btnThemSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSPActionPerformed(evt);
            }
        });

        btnCapNhatSP.setBackground(new java.awt.Color(2, 172, 171));
        btnCapNhatSP.setForeground(new java.awt.Color(255, 255, 255));
        btnCapNhatSP.setText("CẬP NHẬT");
        btnCapNhatSP.setFocusable(false);
        btnCapNhatSP.setFont(new java.awt.Font("UTM BryantLG", 1, 14)); // NOI18N
        btnCapNhatSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatSPActionPerformed(evt);
            }
        });

        btnFirst.setBackground(new java.awt.Color(2, 172, 171));
        btnFirst.setForeground(new java.awt.Color(255, 255, 255));
        btnFirst.setText("|<");
        btnFirst.setFocusable(false);
        btnFirst.setFont(new java.awt.Font("UTM BryantLG", 1, 14)); // NOI18N
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPre.setBackground(new java.awt.Color(2, 172, 171));
        btnPre.setForeground(new java.awt.Color(255, 255, 255));
        btnPre.setText("<<");
        btnPre.setFocusable(false);
        btnPre.setFont(new java.awt.Font("UTM BryantLG", 1, 14)); // NOI18N
        btnPre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreActionPerformed(evt);
            }
        });

        btnLast.setBackground(new java.awt.Color(2, 172, 171));
        btnLast.setForeground(new java.awt.Color(255, 255, 255));
        btnLast.setText(">>");
        btnLast.setFocusable(false);
        btnLast.setFont(new java.awt.Font("UTM BryantLG", 1, 14)); // NOI18N
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnNext.setBackground(new java.awt.Color(2, 172, 171));
        btnNext.setForeground(new java.awt.Color(255, 255, 255));
        btnNext.setText(">|");
        btnNext.setFocusable(false);
        btnNext.setFont(new java.awt.Font("UTM BryantLG", 1, 14)); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnClean.setBackground(new java.awt.Color(2, 172, 171));
        btnClean.setForeground(new java.awt.Color(255, 255, 255));
        btnClean.setText("MỚI");
        btnClean.setFocusable(false);
        btnClean.setFont(new java.awt.Font("UTM BryantLG", 1, 14)); // NOI18N
        btnClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnThemSP, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCapNhatSP, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnClean, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE)
                .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPre, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemSP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCapNhatSP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClean, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlNhanVien.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, 700, -1));

        txtId.setEditable(false);
        txtId.setFont(new java.awt.Font("UTM Aptima", 0, 14)); // NOI18N
        txtId.setLabelText("");
        txtId.setOpaque(false);
        pnlNhanVien.add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 600, 38));

        txtName.setFont(new java.awt.Font("UTM Aptima", 0, 14)); // NOI18N
        txtName.setLabelText("");
        txtName.setOpaque(false);
        pnlNhanVien.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, 600, 38));

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/boxcf/images/icon/exit (1).png"))); // NOI18N
        btnClose.setFocusPainted(false);
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        pnlNhanVien.add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 20, 50, 50));

        dcTimeStart.setFont(new java.awt.Font("UTM Aptima", 0, 14)); // NOI18N
        dcTimeStart.setPreferredSize(new java.awt.Dimension(82, 30));
        pnlNhanVien.add(dcTimeStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 280, 180, -1));

        dcTimeEnd.setFont(new java.awt.Font("UTM Aptima", 0, 14)); // NOI18N
        dcTimeEnd.setPreferredSize(new java.awt.Dimension(82, 30));
        pnlNhanVien.add(dcTimeEnd, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 280, 200, -1));

        lblMaNV4.setBackground(new java.awt.Color(102, 0, 204));
        lblMaNV4.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        lblMaNV4.setForeground(new java.awt.Color(27, 51, 61));
        lblMaNV4.setText("Ngày KT");
        pnlNhanVien.add(lblMaNV4, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 280, 90, 30));

        lblMaNV5.setBackground(new java.awt.Color(102, 0, 204));
        lblMaNV5.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        lblMaNV5.setForeground(new java.awt.Color(27, 51, 61));
        lblMaNV5.setText("Phần trăm");
        pnlNhanVien.add(lblMaNV5, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 350, 70, 30));

        txtQuantity.setFont(new java.awt.Font("UTM Aptima", 0, 14)); // NOI18N
        txtQuantity.setLabelText("");
        txtQuantity.setOpaque(false);
        pnlNhanVien.add(txtQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 340, 180, 38));

        lblMaNV6.setBackground(new java.awt.Color(102, 0, 204));
        lblMaNV6.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        lblMaNV6.setForeground(new java.awt.Color(27, 51, 61));
        lblMaNV6.setText("Số lượt");
        pnlNhanVien.add(lblMaNV6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 360, 80, -1));

        cboPersent.setFont(new java.awt.Font("UTM Aptima", 0, 14)); // NOI18N
        pnlNhanVien.add(cboPersent, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 350, 200, -1));

        lblMaNV7.setBackground(new java.awt.Color(102, 0, 204));
        lblMaNV7.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        lblMaNV7.setForeground(new java.awt.Color(27, 51, 61));
        lblMaNV7.setText("Đơn tối thiểu");
        pnlNhanVien.add(lblMaNV7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 430, 90, 20));

        cboLevel.setFont(new java.awt.Font("UTM Aptima", 0, 14)); // NOI18N
        cboLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLevelActionPerformed(evt);
            }
        });
        pnlNhanVien.add(cboLevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 420, 180, -1));

        javax.swing.GroupLayout gradientPanel1Layout = new javax.swing.GroupLayout(gradientPanel1);
        gradientPanel1.setLayout(gradientPanel1Layout);
        gradientPanel1Layout.setHorizontalGroup(
            gradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientPanel1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(pnlNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, 737, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );
        gradientPanel1Layout.setVerticalGroup(
            gradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gradientPanel1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(pnlNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.exit();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        last();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        next();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnPreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreActionPerformed
        prev();
    }//GEN-LAST:event_btnPreActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnCapNhatSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatSPActionPerformed
        handleUpdate();
    }//GEN-LAST:event_btnCapNhatSPActionPerformed

    private void btnThemSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSPActionPerformed
        handleInsert();
    }//GEN-LAST:event_btnThemSPActionPerformed

    private void btnCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
        clear();
    }//GEN-LAST:event_btnCleanActionPerformed

    private void cboLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLevelActionPerformed
    }//GEN-LAST:event_cboLevelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThongTinKM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThongTinKM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThongTinKM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongTinKM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThongTinKM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.boxcf.components.ButtonRound btnCapNhatSP;
    private com.boxcf.components.ButtonRound btnClean;
    private com.boxcf.components.ButtonRound btnClose;
    private com.boxcf.components.ButtonRound btnFirst;
    private com.boxcf.components.ButtonRound btnLast;
    private com.boxcf.components.ButtonRound btnNext;
    private com.boxcf.components.ButtonRound btnPre;
    private com.boxcf.components.ButtonRound btnThemSP;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.boxcf.components.ComboBoxSuggestion cboLevel;
    private com.boxcf.components.ComboBoxSuggestion cboPersent;
    private com.toedter.calendar.JDateChooser dcTimeEnd;
    private com.toedter.calendar.JDateChooser dcTimeStart;
    private com.boxcf.components.GradientPanel gradientPanel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblMaNV;
    private javax.swing.JLabel lblMaNV1;
    private javax.swing.JLabel lblMaNV2;
    private javax.swing.JLabel lblMaNV4;
    private javax.swing.JLabel lblMaNV5;
    private javax.swing.JLabel lblMaNV6;
    private javax.swing.JLabel lblMaNV7;
    private com.boxcf.components.GradientPanel pnlNhanVien;
    private com.boxcf.components.TextField txtId;
    private com.boxcf.components.TextField txtName;
    private com.boxcf.components.TextField txtQuantity;
    // End of variables declaration//GEN-END:variables

    private void init() {
        this.prepareUI();
        initCbo();
        getViTri();
        setStatus();

    }

    private void prepareUI() {
        Shape shape = new RoundRectangle2D.Double(0, 0, getWidth(), getHeight(), 20, 20);
        this.setShape(shape);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        UI.changeTransBG(new Color(0, 0, 0, 0), txtId, txtName, txtQuantity);

    }

    private void exit() {
        this.dispose();
    }

    private boolean validator() {

        boolean flag = true;
        String mess = "";

        if (Validator.isEmpty(txtName)) {
            mess += "Bạn chưa nhập tên ! \n";
            flag = false;
        }

        if (Validator.isEmpty(dcTimeStart)) {
            mess += "Bạn chưa nhập thời gian bắt đầu ! \n";
            flag = false;
        } else {
            Date dateNow = XDate.toDate(XDate.toString(XDate.now(), "dd/MM/yyyy"), "dd/MM/yyyy");
            Date dateCur = XDate.toDate(XDate.toString(dcTimeStart.getDate(), "dd/MM/yyyy"), "dd/MM/yyyy");
            if (dateNow.after(dateCur)) {
                mess += "Ngày bắt đầu không hợp ! \n";
                flag = false;
            }
        }

        if (Validator.isEmpty(dcTimeEnd)) {
            mess += "Bạn chưa nhập tên thời gian kết thúc ! \n";
            flag = false;
        } else {

            if (dcTimeEnd.getDate().before(XDate.now())) {
                mess += "Thời gian kết thúc không hợp lệ ! \n";
                flag = false;
            } else {
                if (!Validator.isEmpty(dcTimeStart)) {
                    if (!dcTimeEnd.getDate().after(dcTimeStart.getDate())) {
                        mess += "Thời gian kết thúc phải sau thời gian bất đầu ! \n";
                        flag = false;
                    }
                }

            }
        }

        if (Validator.isEmpty(txtQuantity)) {
            mess += "Bạn chưa nhập số lượt sử dụng của khuyến mãi ! \n";
            flag = false;
        } else {
            if (!Validator.isInt(txtQuantity.getText())) {
                mess += "Số lượt sử dụng khuyến mãi không hợp lệ ! \n";
                flag = false;
            } else {
                if (Integer.parseInt(txtQuantity.getText()) <= 0) {
                    mess += "Số lượt sử dụng khuyến mãi phải lớn hơn 0 ! \n";
                    flag = false;
                }
            }
        }

        if (!flag) {
            MsgBox.alert(this, mess);
            return false;
        }

        return true;
    }

    public char selectAChar() {
        String s = "BOXCF";
        Random random = new Random();
        int index = random.nextInt(s.length());
        return s.charAt(index);
    }

    private String genericId() {
        char c = selectAChar();
        ModelCbo mdLevel = (ModelCbo) cboLevel.getSelectedItem();
        String timeStart = XDate.toString(dcTimeStart.getDate(), "dd");
        String timeEnd = XDate.toString(dcTimeEnd.getDate(), "dd");
        String persent = cboPersent.getSelectedItem().toString().replace("%", "");
        String level = (mdLevel.getPrice() / 10000) + "";

        return c + timeStart + timeEnd + persent + level;
    }

    private void handleInsert() {
        if (!validator()) {
            return;
        }
        KhuyenMai km = getModel(true);

        if (dKm.selectById(km.getMaKM()) != null) {
            MsgBox.alert(this, "Khuyến mãi này đã tồn tại vui lòng kiểm tra lại !");
            return;
        }

        txtId.setText(km.getMaKM());

        dKm.insert(km);
        MsgBox.alert(this, "Tạo khuyến mãi thành công ! \n"
                + "Mã khuyến mãi của bạn là: \n" + km.getMaKM());

        clear();
        this.dispose();
        Store.kmView.fillTable();

    }

    private KhuyenMai getModel(boolean insert) {
        String genericedId = txtId.getText();
        if (insert) {
            genericedId = genericId();
        }
        ModelCbo mdLevel = (ModelCbo) cboLevel.getSelectedItem();
        String persent = cboPersent.getSelectedItem().toString().replace("%", "");
        return new KhuyenMai(genericedId,
                txtName.getText(),
                dcTimeStart.getDate(),
                dcTimeEnd.getDate(),
                Integer.parseInt(txtQuantity.getText()),
                Integer.parseInt(persent),
                mdLevel.getPrice());
    }

    public void setModel(KhuyenMai km) {
        this.km = km;
        this.idKm = km.getMaKM();
        getViTri();
        setStatus();

        txtId.setText(this.km.getMaKM());
        txtName.setText(this.km.getTenKM());
        txtQuantity.setText(this.km.getSoLuot() + "");
        dcTimeEnd.setDate(this.km.getNgayKT());
        dcTimeStart.setDate(this.km.getNgayBD());
        cboLevel.setSelectedItem(new ModelCbo((int) km.getDieuKienGiam()));
        cboPersent.setSelectedItem(this.km.getPhanTram() + "%");

    }

    private void first() {
        index = 0;
        editw();
    }

    private void prev() {
        index--;
        editw();
    }

    private void next() {
        index++;
        editw();
    }

    private void last() {
        index = list.size() - 1;
        editw();
    }

    private void editw() {
        try {
            if (idKm == null) {
                clear();
                return;
            }
            KhuyenMai sp = list.get(index);
            setModel(sp);
            setStatus();
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }

    private void setStatus() {
        boolean edit = this.index >= 0;
        boolean first = this.index > 0;
        boolean last = this.index < list.size() - 1;
        btnCapNhatSP.setEnabled(edit);
        btnCapNhatSP.setBackground(edit ? Color.decode("#02ACAB") : Color.decode("#e6ddce"));
        btnThemSP.setEnabled(!edit);
        btnThemSP.setBackground(!edit ? Color.decode("#02ACAB") : Color.decode("#e6ddce"));

        btnFirst.setEnabled(edit && first);
        btnFirst.setBackground(edit && first ? Color.decode("#02ACAB") : Color.decode("#e6ddce"));
        btnPre.setEnabled(edit && first);
        btnPre.setBackground(edit && first ? Color.decode("#02ACAB") : Color.decode("#e6ddce"));
        btnLast.setEnabled(edit && last);
        btnLast.setBackground(edit && last ? Color.decode("#02ACAB") : Color.decode("#e6ddce"));
        btnNext.setEnabled(edit && last);
        btnNext.setBackground(edit && last ? Color.decode("#02ACAB") : Color.decode("#e6ddce"));
    }

    private void clear() {
        txtId.setText("");
        txtName.setText("");
        txtQuantity.setText("");
        cboLevel.setSelectedIndex(0);
        cboPersent.setSelectedIndex(0);
        index = -1;
        setStatus();
    }

    private void getViTri() {
        if (idKm == null) {
            return;
        }
        for (KhuyenMai km : list) {
            if (km.getMaKM().equals(idKm)) {
                index = list.indexOf(km);
                break;
            }
        }
    }

    private void handleUpdate() {
        if (!validator()) {
            return;
        }

        KhuyenMai km = getModel(false);

        if (km == null) {
            return;
        }

        boolean check = MsgBox.confirm(this, "Điều này sẽ làm thay đổi khuyến mãi mà bạn đang xem T.T");

        if (check) {
            dKm.update(km);
            this.dispose();
            Store.kmView.fillTable();
        }
    }

    private void initCbo() {
        for (int i = 1; i <= 100; i++) {
            cboLevel.addItem(new ModelCbo(i * 10000));
            if (i % 5 == 0) {
                cboPersent.addItem(i + "%");
            }
        }
    }
}
