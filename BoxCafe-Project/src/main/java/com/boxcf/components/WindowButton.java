/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.boxcf.components;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;
import javax.swing.JFrame;

/**
 *
 * @author PC
 */
public class WindowButton extends javax.swing.JPanel {

    /**
     * Creates new form WindowButton
     */
    public WindowButton() {
        initComponents();
        btnClose.setBackground(new Color(0, 0, 0, 0));
        btnScale.setBackground(new Color(0, 0, 0, 0));

        hover();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnScale = new com.boxcf.components.ButtonRound();
        btnClose = new com.boxcf.components.ButtonRound();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(78, 34));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(78, 34));

        btnScale.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/boxcf/images/icon/icons8_square_20px.png"))); // NOI18N
        btnScale.setFocusable(false);
        btnScale.setMaximumSize(new java.awt.Dimension(34, 34));
        btnScale.setMinimumSize(new java.awt.Dimension(34, 34));
        btnScale.setPreferredSize(new java.awt.Dimension(34, 34));

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/boxcf/images/icon/close.png"))); // NOI18N
        btnClose.setFocusable(false);
        btnClose.setMaximumSize(new java.awt.Dimension(34, 34));
        btnClose.setMinimumSize(new java.awt.Dimension(34, 34));
        btnClose.setPreferredSize(new java.awt.Dimension(34, 34));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnScale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnScale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.boxcf.components.ButtonRound btnClose;
    private com.boxcf.components.ButtonRound btnScale;
    // End of variables declaration//GEN-END:variables

    //hover
    public void hover() {
        btnClose.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                btnClose.setBackground(Color.decode("#cccccc"));
                btnClose.setIcon(new ImageIcon(getClass().getResource("/com/boxcf/images/icon/re-close.png")));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                btnClose.setBackground(new Color(0, 0, 0, 0));
                btnClose.setIcon(new ImageIcon(getClass().getResource("/com/boxcf/images/icon/close.png")));

            }

        });

        btnScale.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                btnScale.setBackground(Color.decode("#cccccc"));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                btnScale.setBackground(new Color(0, 0, 0, 0));

            }
        });
    }

    public void initEvent(JFrame fram) {
        btnClose.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                fram.dispose();
            }
        });

        btnScale.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                if (fram.getExtendedState() == JFrame.MAXIMIZED_BOTH) {
                    fram.setExtendedState(JFrame.NORMAL);
                } else {
                    fram.setExtendedState(JFrame.MAXIMIZED_BOTH);
                }
            }
        });
    }

}
